{"version":3,"sources":["../src/app.js"],"names":["express","require","logger","bodyParser","admin","user","auth","member","video","videoadmin","connection","jsonwebtoken","app","publicDir","join","__dirname","init","use","json","urlencoded","extended","req","res","next","headers","authorization","split","verify","err","decode","undefined","configure","static","status","send","statusCode","message","originalUrl","module","exports"],"mappings":"AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;;AAEA,IAAIC,SAASD,QAAQ,QAAR,CAAb;AACA,IAAIE,aAAaF,QAAQ,aAAR,CAAjB;AACA,IAAIG,QAAQH,QAAQ,wBAAR,CAAZ;AACA,IAAII,OAAOJ,QAAQ,mBAAR,CAAX;AACA,IAAIK,OAAOL,QAAQ,mBAAR,CAAX;AACA,IAAIM,SAASN,QAAQ,qBAAR,CAAb;AACA,IAAIO,QAAQP,QAAQ,oBAAR,CAAZ;AACA,IAAIQ,aAAaR,QAAQ,yBAAR,CAAjB;AACA,IAAIS,aAAaT,QAAQ,cAAR,CAAjB;AACA,IAAIU,eAAeV,QAAQ,cAAR,CAAnB;;AAEA,IAAIW,MAAMZ,SAAV;;AAEA,IAAIa,YAAYZ,QAAQ,MAAR,EAAgBa,IAAhB,CAAqBC,SAArB,EAA+B,YAA/B,CAAhB;;AAEAL,WAAWM,IAAX;;AAEAJ,IAAIK,GAAJ,CAAQf,OAAO,KAAP,CAAR;AACAU,IAAIK,GAAJ,CAAQd,WAAWe,IAAX,EAAR;AACAN,IAAIK,GAAJ,CAAQd,WAAWgB,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;;AAEAR,IAAIK,GAAJ,CAAQ,UAASI,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAChC,MAAGF,IAAIG,OAAJ,IAAeH,IAAIG,OAAJ,CAAYC,aAA3B,IAA4CJ,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,MAA4C,KAA3F,EAAkG;AAC/Ff,iBAAagB,MAAb,CAAoBN,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAApB,EAA6D,aAA7D,EAA4E,UAASE,GAAT,EAAcC,MAAd,EAAsB;;AAEhG,UAAID,GAAJ,EACCP,IAAIhB,IAAJ,GAAWyB,SAAX;;AAECT,UAAIhB,IAAJ,GAAWwB,MAAX;AACAN;AACF,KAPF;AASA,GAVH,MAUO;AACHF,QAAIhB,IAAJ,GAAWyB,SAAX;AACAP;AACD;AACH,CAfD;;AAiBAnB,MAAM2B,SAAN,CAAgBnB,GAAhB;AACAP,KAAK0B,SAAL,CAAenB,GAAf;AACAN,KAAKyB,SAAL,CAAenB,GAAf;AACAL,OAAOwB,SAAP,CAAiBnB,GAAjB;AACAJ,MAAMuB,SAAN,CAAgBnB,GAAhB;AACAH,WAAWsB,SAAX,CAAqBnB,GAArB;;AAEAA,IAAIK,GAAJ,CAAQjB,QAAQgC,MAAR,CAAenB,SAAf,CAAR;;AAEAD,IAAIK,GAAJ,CAAQ,UAASI,GAAT,EAAcC,GAAd,EAAmB;AACzBA,MAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,YAAW,GAAZ,EAAiBC,SAASf,IAAIgB,WAAJ,GAAkB,YAA5C,EAArB;AACD,CAFD;;AAMAC,OAAOC,OAAP,GAAiB3B,GAAjB","file":"app.js","sourcesContent":["var express = require('express');\n\nvar logger = require('morgan');\nvar bodyParser = require('body-parser');\nvar admin = require('./app/routes/spiderman');\nvar user = require('./app/routes/user');\nvar auth = require('./app/routes/auth');\nvar member = require('./app/routes/member');\nvar video = require('./app/routes/video');\nvar videoadmin = require('./app/routes/videoadmin');\nvar connection = require('../config/db');\nvar jsonwebtoken = require(\"jsonwebtoken\");\n\nvar app = express();\n\nvar publicDir = require('path').join(__dirname,'/../public');\n\nconnection.init();\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.use(function(req, res, next) {\n\tif(req.headers && req.headers.authorization && req.headers.authorization.split(' ')[0] === 'JWT') {\n  \t\tjsonwebtoken.verify(req.headers.authorization.split(' ')[1], 'RESTFULAPIs', function(err, decode) {\n    \t\n\t    \tif (err) \n\t    \t\treq.user = undefined;\n\t      \n\t      \treq.user = decode;\n\t      \tnext();\n    \t});\n  \t\n  \t}else{\n    \treq.user = undefined;\n    \tnext();\n  \t}\n});\n\nadmin.configure(app);\nuser.configure(app);\nauth.configure(app);\nmember.configure(app);\nvideo.configure(app);\nvideoadmin.configure(app);\n\napp.use(express.static(publicDir));\n\napp.use(function(req, res) {\n  res.status(404).send({statusCode:404, message: req.originalUrl + ' not found' })\n});\n\n\n\nmodule.exports = app;"]}