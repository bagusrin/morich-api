{"version":3,"sources":["../src/app/controllers/auth.js"],"names":["connection","require","jwt","bcrypt","crypto","userModel","emailModel","cfg","empty","cAuth","login","req","res","next","body","email","password","status","json","statusCode","message","acquire","err","con","sql","query","data","release","code","length","comparePassword","user_password","pp","user_photo","photoProfileUrl","fullName","user_firstname","user_lastname","splitName","trim","split","initialName","charAt","toUpperCase","statusAccount","success","user_id","user_email","user_mobile_number","rank","user_username","total_invited","member_joined","inviter_email","forgotPassword","secret","Date","now","token","createHmac","update","digest","sendEmailForgotPassword","passwordReset","params","console","log","passwordResetPost","retypePassword","hashSync","loginRequired","user","module","exports"],"mappings":"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","file":"auth.js","sourcesContent":["var connection = require('../../../config/db');\n\nvar jwt = require('jsonwebtoken'),\n    bcrypt = require('bcrypt'),\n    crypto = require('crypto'),\n    userModel = require('../models/user'),\n    emailModel = require('../models/email'),\n    cfg = require('../../../config'),\n    empty = require('is-empty');\n \nfunction cAuth() {\n\n  this.login = function(req,res,next) {\n    if( empty(req.body.email) || empty(req.body.password) )\n      return res.status(500).json({statusCode:500,message: \"Please check your parameter or value required\"}); \n\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var email = req.body.email;\n        var password = req.body.password;\n\n        var sql = \"SELECT *, user_id as id, user_invited_by as invited_id, (select count(user_id) from users WHERE user_invited_by = id) as total_invited, (select user_email FROM users WHERE user_id = invited_id) as inviter_email, \\\n            (select count(user_id) from users WHERE user_invited_by = id AND status <> '0') as member_joined, FIND_IN_SET( user_point, (SELECT GROUP_CONCAT( user_point ORDER BY user_point DESC ) FROM users )) \\\n        AS rank FROM users WHERE user_email = '\"+email+\"' LIMIT 1\";\n\n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n\n          if(data.length < 1)\n            return res.status(500).json({statusCode:500, message: 'Authentication failed. Invalid user or password.' });\n\n          if (!userModel.comparePassword(password,data[0].user_password)) {\n                return res.status(500).json({statusCode:500, message: 'Authentication failed. Invalid user or password.' });\n          }\n          \n          var pp = (data[0].user_photo) ? cfg.photoProfileUrl+''+data[0].user_photo : null;\n          var fullName = data[0].user_firstname+' '+data[0].user_lastname;\n\n          var splitName = fullName.trim().split(\" \");\n\n          if(splitName.length > 1){\n            var initialName = splitName[0].charAt(0)+''+splitName[1].charAt(0);\n          }else{\n            var initialName = splitName[0].charAt(0);\n          }\n\n          initialName = initialName.toUpperCase();\n\n          //console.log(splitName.length);\n          \n\n          //var isActive = (data[0].status == 1) ? true : false;\n          var statusAccount = \"\";\n\n          if(data[0].status == 0){\n            statusAccount = \"not active\";\n          }\n\n          if(data[0].status == 1){\n            statusAccount = \"business\";\n          }\n\n          if(data[0].status == 2){\n            statusAccount = \"potential\";\n          }\n\n          if(data[0].status == 3){\n            statusAccount = \"product\";\n          }\n          \n          return res.status(200).json({\n                                  statusCode:200,\n                                  success:true,\n                                  data:{\n                                    \"userId\":data[0].user_id,\n                                    \"email\":data[0].user_email,\n                                    \"firstName\":data[0].user_firstname,\n                                    \"lastName\":data[0].user_lastname,\n                                    \"mobileNumber\":data[0].user_mobile_number,\n                                    \"photoUrl\": pp,\n                                    \"initialName\": initialName,\n                                    \"ranking\": data[0].rank,\n                                    \"url\": \"https://morichworldwide.com/\"+data[0].user_username,\n                                    \"totalInvited\": data[0].total_invited,\n                                    \"memberJoined\": data[0].member_joined,\n                                    //\"isActive\": isActive,\n                                    \"accountStatus\": statusAccount,\n                                    \"emailInviter\": data[0].inviter_email\n                                  }\n                              });\n \n      });\n    });\n  };\n\n  this.forgotPassword = function(req,res,next) {\n    if( empty(req.body.email))\n      return res.status(500).json({statusCode:500,message: \"Please check your parameter or value required\"}); \n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var email = req.body.email;\n        var secret = \"ngopingapangopi\"+Date.now();\n\n        const token = crypto.createHmac('sha256', secret)\n                           .update(email)\n                           .digest('hex');\n\n        var sql = \"SELECT * FROM users WHERE user_email = '\"+email+\"' LIMIT 1\";\n\n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n\n          if(data.length < 1)\n            return res.status(500).json({statusCode:500, message: 'Invalid Email. Email has not registered.'});\n\n          con.query(\"UPDATE users set user_token = '\"+token+\"', update_date = NOW() WHERE user_email = '\"+email+\"'\", function(err,data){\n            if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n\n            emailModel.sendEmailForgotPassword(email,token);\n            return res.status(200).json({statusCode:200,success:true});\n          });\n      });\n    });\n  };\n\n  this.passwordReset = function(req,res,next) {\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var token = req.params.token;\n\n        console.log(token);\n\n        var sql = \"SELECT * FROM users WHERE user_token = '\"+token+\"' LIMIT 1\";\n\n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n\n          if(data.length < 1)\n            return res.status(500).json({statusCode:500, message: 'Link token may have expired.'});\n\n          return res.status(200).json({statusCode:200,success:true,data:{\"token\":token}});\n      });\n    });\n  };\n  \n  this.passwordResetPost = function(req,res,next) {\n    if( empty(req.body.token) || empty(req.body.password) || empty(req.body.retypePassword) )\n      return res.status(500).json({statusCode:500,message: \"Please check your parameter or value required\"}); \n     connection.acquire(function(err,con){\n        if (err) throw err;\n\n          var token = req.body.token;\n          var password = bcrypt.hashSync(req.body.password, 10);\n          var retypePassword = req.body.retypePassword;\n\n          if(req.body.password != req.body.retypePassword)\n            return res.status(500).json({statusCode:500,message: \"Password doesn't match\"});\n\n          var sql = \"UPDATE users SET user_password = '\"+password+\"', update_date = NOW() WHERE user_token = '\"+token+\"'\";\n\n          console.log(sql);\n\n          con.query(sql, function(err,data){\n            con.release();\n            if(err)\n                return res.status(500).json({statusCode:500,message: err.code});\n               \n            return res.status(200).json({statusCode:200,success:true});\n        });\n     });\n  };\n\n  \n\n  \n\n  \n\n  this.loginRequired = function(req, res, next) {\n    if (req.user) {\n      next();\n    } else {\n      return res.status(401).json({statusCode:401, message: 'Unauthorized user!' });\n    }\n  };\n}\nmodule.exports = new cAuth();"]}