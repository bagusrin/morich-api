{"version":3,"sources":["../src/app/controllers/chat.js"],"names":["connection","require","empty","cfg","cChat","list","req","res","next","email","query","page","undefined","limit","status","json","statusCode","message","offset","count","acquire","err","con","sql","data","release","code","dt","i","length","userId","firstName","lastName","email_","UserID_One","uidTwo","UserID_Two","UserTwoFirstname","UserTwoLastname","pp","UserTwoImage","photoProfileUrl","fullName","splitName","trim","split","initialName","charAt","uidOne","UserOneFirstname","UserOneLastname","UserOneImage","push","ConversationID","NewMessage","LastMessage","ReplyTransactTime","ReplyStatus","success","listSearch","requestBy","q","str","toLowerCase","includes","detail","conversationId","receiver","ppSender","senderPhoto","fullNameSender","senderFirstname","senderLastname","splitNameSender","initialNameSender","ppReceiver","receiverPhoto","fullNameReceiver","receiverFirstname","receiverLastname","splitNameReceiver","initialNameReceiver","UserID","ReplyID","Reply","senderId","receiverId","TransactTime","Status","send","body","sender","insertId","data2","getUserInfo","user_photo","user_firstname","user_lastname","toUpperCase","user_id","user_email","getConversationId","console","log","module","exports"],"mappings":"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","file":"chat.js","sourcesContent":["var connection = require('../../../config/db');\n\nvar empty = require('is-empty'),\n    cfg = require('../../../config');\n \nfunction cChat() {\n \n  this.list = function(req,res,next) {\n\n    var email = req.query.email;\n    var page = (req.query.page == undefined) ? 1 : req.query.page;\n    var limit = (req.query.limit == undefined) ? 20 : req.query.limit;\n\n    if(empty(email))\n      return res.status(500).json({statusCode:500,message: \"Parameter email is required\"});\n    \n    \n    var offset = (page - 1) * limit;\n    var count = \" LIMIT \"+offset+\",\"+limit;\n\n    \n\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var sql = \"SELECT   distinct c.ConversationID, \\\n                            c.UserID_One, \\\n                            m1.user_id as uidOne, m1.user_firstname as UserOneFirstname, m1.user_lastname as UserOneLastname, \\\n                            m1.user_photo As UserOneImage, \\\n                            c.UserID_Two, m2.user_firstname as UserTwoFirstname, m2.user_lastname as UserTwoLastname, \\\n                            m2.user_id as uidTwo, m2.user_photo As UserTwoImage, \\\n                            (SELECT count(*) from replies where status = 1 AND UserID <> '\"+email+\"' AND ConversationID = c.ConversationID) AS NewMessage, \\\n                            (SELECT Reply FROM replies WHERE ConversationID = c.ConversationID ORDER BY TransactTime DESC LIMIT 1) As LastMessage, \\\n                            (SELECT UserID FROM replies WHERE UserID <> '\"+email+\"' AND ConversationID = c.ConversationID ORDER BY TransactTime DESC LIMIT 1) As UserID, \\\n                            (SELECT TransactTime FROM replies WHERE ConversationID = c.ConversationID ORDER BY TransactTime DESC LIMIT 1) As ReplyTransactTime, \\\n                            (SELECT Status FROM replies WHERE ConversationID = c.ConversationID ORDER BY TransactTime DESC LIMIT 1) As ReplyStatus \\\n                  FROM conversations c \\\n                  inner join users m1 on m1.user_email = c.UserID_One \\\n                  inner join users m2 on m2.user_email = c.UserID_Two \\\n                  where (c.UserID_One = '\"+email+\"' and c.UserOneStatus <= 4) or (c.UserID_Two = '\"+email+\"' and c.UserTwoStatus <= 4) \\\n                  ORDER BY ReplyTransactTime DESC \"+count;\n\n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n             \n          var dt = [];\n          for (var i = 0; i < data.length; i++) {\n\n              var userId = \"\";\n              var firstName = \"\";\n              var lastName = \"\";\n              var email_ = \"\";\n\n              //console.log(data[i].UserOneFirstname);\n\n              if(data[i].UserID_One == email){\n                userId = data[i].uidTwo;\n                email_ = data[i].UserID_Two;\n                firstName = data[i].UserTwoFirstname;\n                lastName = data[i].UserTwoLastname;\n                pp = (data[i].UserTwoImage) ? cfg.photoProfileUrl+''+data[i].UserTwoImage : null;\n\n                var fullName = data[i].UserTwoFirstname+' '+data[0].UserTwoLastname;\n\n                var splitName = fullName.trim().split(\" \");\n\n                if(splitName.length > 1){\n                  var initialName = splitName[0].charAt(0)+''+splitName[1].charAt(0);\n                }else{\n                  var initialName = splitName[0].charAt(0);\n                }\n\n              }else{\n                userId = data[i].uidOne;\n                email_ = data[i].UserID_One;\n                firstName = data[i].UserOneFirstname;\n                lastName = data[i].UserOneLastname;\n                pp = (data[i].UserOneImage) ? cfg.photoProfileUrl+''+data[i].UserOneImage : null;\n\n                var fullName = data[i].UserOneFirstname+' '+data[0].UserOneLastname;\n\n                var splitName = fullName.trim().split(\" \");\n\n                if(splitName.length > 1){\n                  var initialName = splitName[0].charAt(0)+''+splitName[1].charAt(0);\n                }else{\n                  var initialName = splitName[0].charAt(0);\n                } \n              }\n\n              dt.push({\n                \"conversationId\": data[i].ConversationID,\n                \"userId\": userId,\n                \"email\": email_,\n                \"firstName\": firstName,\n                \"lastName\": lastName,\n                \"photoURL\": pp,\n                \"initialName\": initialName,\n                \"newMessage\": data[i].NewMessage,\n                \"lastMessage\": empty(data[i].LastMessage) ? '' : data[i].LastMessage,\n                \"replyTransactTime\": data[i].ReplyTransactTime,\n                \"replyStatus\": data[i].ReplyStatus\n              });\n          }\n\n          return res.status(200).json({\n                                  statusCode:200,\n                                  success:true,\n                                  data:dt\n                              });\n \n      });\n    });\n  }\n\n  this.listSearch = function(req,res,next) {\n\n    var email = req.query.requestBy;\n    var q = req.query.q;\n    var page = (req.query.page == undefined) ? 1 : req.query.page;\n    var limit = (req.query.limit == undefined) ? 20 : req.query.limit;\n\n    if(empty(email))\n      return res.status(500).json({statusCode:500,message: \"Parameter email is required\"});\n    \n    \n    var offset = (page - 1) * limit;\n    var count = \" LIMIT \"+offset+\",\"+limit;\n\n    \n\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var sql = \"SELECT   distinct c.ConversationID, \\\n                            c.UserID_One, \\\n                            m1.user_id as uidOne, m1.user_firstname as UserOneFirstname, m1.user_lastname as UserOneLastname, \\\n                            m1.user_photo As UserOneImage, \\\n                            c.UserID_Two, m2.user_firstname as UserTwoFirstname, m2.user_lastname as UserTwoLastname, \\\n                            m2.user_id as uidTwo, m2.user_photo As UserTwoImage, \\\n                            (SELECT count(*) from replies where status = 1 AND UserID <> '\"+email+\"' AND ConversationID = c.ConversationID) AS NewMessage, \\\n                            (SELECT Reply FROM replies WHERE ConversationID = c.ConversationID ORDER BY TransactTime DESC LIMIT 1) As LastMessage, \\\n                            (SELECT UserID FROM replies WHERE UserID <> '\"+email+\"' AND ConversationID = c.ConversationID ORDER BY TransactTime DESC LIMIT 1) As UserID, \\\n                            (SELECT TransactTime FROM replies WHERE ConversationID = c.ConversationID ORDER BY TransactTime DESC LIMIT 1) As ReplyTransactTime, \\\n                            (SELECT Status FROM replies WHERE ConversationID = c.ConversationID ORDER BY TransactTime DESC LIMIT 1) As ReplyStatus \\\n                  FROM conversations c \\\n                  inner join users m1 on m1.user_email = c.UserID_One \\\n                  inner join users m2 on m2.user_email = c.UserID_Two \\\n                  where (c.UserID_One = '\"+email+\"' and c.UserOneStatus <= 4) or (c.UserID_Two = '\"+email+\"' and c.UserTwoStatus <= 4) \\\n                  ORDER BY ReplyTransactTime DESC \"+count;\n\n        //console.log(sql);\n\n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n             \n          var dt = [];\n          for (var i = 0; i < data.length; i++) {\n\n              var userId = \"\";\n              var firstName = \"\";\n              var lastName = \"\";\n              var email_ = \"\";\n\n              //console.log(data[i].UserOneFirstname);\n\n              if(data[i].UserID_One == email){\n                userId = data[i].uidTwo;\n                email_ = data[i].UserID_Two;\n                firstName = data[i].UserTwoFirstname;\n                lastName = data[i].UserTwoLastname;\n                pp = (data[i].UserTwoImage) ? cfg.photoProfileUrl+''+data[i].UserTwoImage : null;\n\n                var fullName = data[i].UserTwoFirstname+' '+data[0].UserTwoLastname;\n\n                var splitName = fullName.trim().split(\" \");\n\n                if(splitName.length > 1){\n                  var initialName = splitName[0].charAt(0)+''+splitName[1].charAt(0);\n                }else{\n                  var initialName = splitName[0].charAt(0);\n                }\n\n                if(!empty(q)){\n                  \n                  var str = fullName.toLowerCase();\n                  \n                  if(str.includes(q.toLowerCase())){\n                    dt.push({\n                      \"conversationId\": data[i].ConversationID,\n                      \"userId\": userId,\n                      \"email\": email_,\n                      \"firstName\": firstName,\n                      \"lastName\": lastName,\n                      \"photoURL\": pp,\n                      \"initialName\": initialName,\n                      \"newMessage\": data[i].NewMessage,\n                      \"lastMessage\": empty(data[i].LastMessage) ? '' : data[i].LastMessage,\n                      \"replyTransactTime\": data[i].ReplyTransactTime,\n                      \"replyStatus\": data[i].ReplyStatus\n                    });\n                  }\n                }else{\n                  dt.push({\n                    \"conversationId\": data[i].ConversationID,\n                    \"userId\": userId,\n                    \"email\": email_,\n                    \"firstName\": firstName,\n                    \"lastName\": lastName,\n                    \"photoURL\": pp,\n                    \"initialName\": initialName,\n                    \"newMessage\": data[i].NewMessage,\n                    \"lastMessage\": empty(data[i].LastMessage) ? '' : data[i].LastMessage,\n                    \"replyTransactTime\": data[i].ReplyTransactTime,\n                    \"replyStatus\": data[i].ReplyStatus\n                  });\n                }\n\n              }else{\n                userId = data[i].uidOne;\n                email_ = data[i].UserID_One;\n                firstName = data[i].UserOneFirstname;\n                lastName = data[i].UserOneLastname;\n                pp = (data[i].UserOneImage) ? cfg.photoProfileUrl+''+data[i].UserOneImage : null;\n\n                var fullName = data[i].UserOneFirstname+' '+data[0].UserOneLastname;\n\n                var splitName = fullName.trim().split(\" \");\n\n                if(splitName.length > 1){\n                  var initialName = splitName[0].charAt(0)+''+splitName[1].charAt(0);\n                }else{\n                  var initialName = splitName[0].charAt(0);\n                }\n\n                if(!empty(q)){\n                  \n                  var str = fullName.toLowerCase();\n                  \n                  if(str.includes(q.toLowerCase())){\n                    dt.push({\n                      \"conversationId\": data[i].ConversationID,\n                      \"userId\": userId,\n                      \"email\": email_,\n                      \"firstName\": firstName,\n                      \"lastName\": lastName,\n                      \"photoURL\": pp,\n                      \"initialName\": initialName,\n                      \"newMessage\": data[i].NewMessage,\n                      \"lastMessage\": empty(data[i].LastMessage) ? '' : data[i].LastMessage,\n                      \"replyTransactTime\": data[i].ReplyTransactTime,\n                      \"replyStatus\": data[i].ReplyStatus\n                    }); \n                  }\n                }else{\n                  dt.push({\n                    \"conversationId\": data[i].ConversationID,\n                    \"userId\": userId,\n                    \"email\": email_,\n                    \"firstName\": firstName,\n                    \"lastName\": lastName,\n                    \"photoURL\": pp,\n                    \"initialName\": initialName,\n                    \"newMessage\": data[i].NewMessage,\n                    \"lastMessage\": empty(data[i].LastMessage) ? '' : data[i].LastMessage,\n                    \"replyTransactTime\": data[i].ReplyTransactTime,\n                    \"replyStatus\": data[i].ReplyStatus\n                  }); \n                }\n              }\n          }\n\n          return res.status(200).json({\n                                  statusCode:200,\n                                  success:true,\n                                  data:dt\n                              });\n \n      });\n    });\n  }\n\n  this.detail = function(req,res,next) {\n\n    var conversationId = req.query.conversationId;\n    var requestBy = req.query.requestBy;\n    var receiver = req.query.receiver;\n    var page = (req.query.page == undefined) ? 1 : req.query.page;\n    var limit = (req.query.limit == undefined) ? 20 : req.query.limit;\n\n    if(empty(conversationId))\n      return res.status(500).json({statusCode:500,message: \"Parameter conversationId is required\"});\n\n    if(empty(requestBy))\n      return res.status(500).json({statusCode:500,message: \"Parameter requestBy is required\"});\n\n    if(empty(receiver))\n      return res.status(500).json({statusCode:500,message: \"Parameter receiver is required\"});\n    \n    \n    var offset = (page - 1) * limit;\n    var count = \" LIMIT \"+offset+\",\"+limit;\n\n    \n\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var sql = \"SELECT   r.*,  \\\n                            m1.user_id as senderId, m1.user_firstname as senderFirstname, m1.user_lastname as senderLastname, \\\n                            m1.user_photo As senderPhoto, \\\n                            m2.user_id as receiverId, m2.user_firstname as receiverFirstname, m2.user_lastname as receiverLastname, \\\n                            m2.user_photo As receiverPhoto \\\n                  FROM replies r \\\n                  inner join users m1 on m1.user_email = r.UserID \\\n                  inner join users m2 on m2.user_email = r.UserRecepient \\\n                  where ConversationID = '\"+conversationId+\"' \\\n                  ORDER BY TransactTime DESC \"+count;\n        \n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n             \n          //console.log(data);\n          var dt = [];\n          for (var i = 0; i < data.length; i++) {\n\n              var ppSender = (data[i].senderPhoto) ? cfg.photoProfileUrl+''+data[i].senderPhoto : null;\n\n              var fullNameSender = data[i].senderFirstname+' '+data[i].senderLastname;\n\n              var splitNameSender = fullNameSender.trim().split(\" \");\n\n              if(splitNameSender.length > 1){\n                var initialNameSender = splitNameSender[0].charAt(0)+''+splitNameSender[1].charAt(0);\n              }else{\n                var initialNameSender = splitNameSender[0].charAt(0);\n              } \n\n\n              var ppReceiver = (data[i].receiverPhoto) ? cfg.photoProfileUrl+''+data[i].receiverPhoto : null;\n\n              var fullNameReceiver = data[i].receiverFirstname+' '+data[0].receiverLastname;\n\n              var splitNameReceiver = fullNameReceiver.trim().split(\" \");\n\n              if(splitNameReceiver.length > 1){\n                var initialNameReceiver = splitNameReceiver[0].charAt(0)+''+splitNameReceiver[1].charAt(0);\n              }else{\n                var initialNameReceiver = splitNameReceiver[0].charAt(0);\n              }\n\n              if(data[i].UserID == requestBy){ \n\n                dt.push({\n                  \"replyId\": data[i].ReplyID,\n                  \"conversationId\": data[i].ConversationID,\n                  \"message\": data[i].Reply,\n                  \"senderId\": data[i].senderId,\n                  \"reciverId\": data[i].receiverId,\n                  \"senderEmail\": data[i].UserID,\n                  \"senderFirstname\": data[i].senderFirstname,\n                  \"senderLastname\": data[i].senderLastname,\n                  \"photoURLSender\": ppSender,\n                  \"initialNameSender\": initialNameSender,\n                  \"receiverEmail\": data[i].receiver,\n                  \"receiverFirstname\": data[i].receiverFirstname,\n                  \"receiverLastname\": data[i].receiverLastname,\n                  \"photoURLReceiver\": ppReceiver,\n                  \"initialNameReceiver\": initialNameReceiver,\n                  \"transactTime\": data[i].TransactTime,\n                  \"replyStatus\": data[i].Status,\n                  \"from\": data[i].UserID,\n                  \"to\": receiver\n                });\n              \n              }else{\n\n                dt.push({\n                  \"replyId\": data[i].ReplyID,\n                  \"conversationId\": data[i].ConversationID,\n                  \"message\": data[i].Reply,\n                  \"senderId\": data[i].senderId,\n                  \"reciverId\": data[i].receiverId,\n                  \"senderEmail\": data[i].UserID,\n                  \"senderFirstname\": data[i].senderFirstname,\n                  \"senderLastname\": data[i].senderLastname,\n                  \"photoURLSender\": ppSender,\n                  \"initialNameSender\": initialNameSender,\n                  \"receiverEmail\": data[i].receiver,\n                  \"receiverFirstname\": data[i].receiverFirstname,\n                  \"receiverLastname\": data[i].receiverLastname,\n                  \"photoURLReceiver\": ppReceiver,\n                  \"initialNameReceiver\": initialNameReceiver,\n                  \"transactTime\": data[i].TransactTime,\n                  \"replyStatus\": data[i].Status,\n                  \"from\": data[i].UserID,\n                  \"to\": requestBy\n                });\n              }\n          }\n\n          return res.status(200).json({\n                                  statusCode:200,\n                                  success:true,\n                                  data:dt\n                              });\n \n      });\n    });\n  }\n\n  this.send = function(req,res,next) {\n\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var sql = \"INSERT INTO replies (Reply, UserID, UserRecepient, Status, \\\n            ConversationID,TransactTime) \\\n            VALUES ('\"+req.body.message+\"','\"+req.body.sender+\"','\"+req.body.receiver+\"',1,'\"+req.body.conversationId+\"', NOW())\";\n        \n        //console.log(sql);\n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n             \n          \n          con.query(\"SELECT TransactTime FROM replies WHERE ReplyID = \"+data.insertId+\" LIMIT 1\", function(err,data2){\n            return res.status(200).json({\n                                  statusCode:200,\n                                  success:true,\n                                  data:{\"replyId\":data.insertId,\"transactTime\":data2[0].TransactTime}\n                              });\n            });\n        });\n\n    });\n  }\n\n  this.getUserInfo = function(req,res,next) {\n     connection.acquire(function(err,con){\n        if (err) throw err;\n\n          var sql = 'SELECT * FROM users WHERE user_email=\"'+req.query.email+'\" LIMIT 1';\n          //console.log(sql);\n          con.query(sql, function(err,data){\n            con.release();\n            if(err)\n                return res.status(500).json({statusCode:500,message: err.code});\n\n            if(data.length < 1){\n              res.status(404).json({statusCode:404,message: \"Data not found\"});\n            }else{\n              \n              var dt = [];\n              var pp = (data[0].user_photo) ? cfg.photoProfileUrl+''+data[0].user_photo : null;\n\n              var fullName = data[0].user_firstname+' '+data[0].user_lastname;\n\n              var splitName = fullName.trim().split(\" \");\n\n              if(splitName.length > 1){\n                var initialName = splitName[0].charAt(0)+''+splitName[1].charAt(0);\n              }else{\n                var initialName = splitName[0].charAt(0);\n              }\n\n              initialName = initialName.toUpperCase();\n\n              dt.push({\n                \"userId\": data[0].user_id,\n                \"email\": data[0].user_email,\n                \"firstName\": data[0].user_firstname,\n                \"lastName\": data[0].user_lastname,\n                \"initialName\": initialName,\n                \"photoUrl\": pp\n              });\n\n              //console.log(dt[0]);\n\n              return res.status(200).json({statusCode:200,success:true,data:dt[0]});\n            }\n        });\n     });\n  };\n\n  this.getConversationId = function(req,res,next) {\n\n    var sender = req.query.sender;\n    var receiver = req.query.receiver;\n\n    if(empty(sender))\n      return res.status(500).json({statusCode:500,message: \"Parameter sender is required\"});\n\n    if(empty(receiver))\n      return res.status(500).json({statusCode:500,message: \"Parameter receiver is required\"});\n\n\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var sql = \"SELECT ConversationID FROM conversations WHERE (UserID_One = '\"+sender+\"' AND  UserID_Two = '\"+receiver+\"') OR (UserID_Two = '\"+sender+\"' AND  UserID_One = '\"+receiver+\"') LIMIT 1  \";\n        console.log(sql);\n\n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n             \n          if(data.length < 1){\n            res.status(404).json({statusCode:404,message: \"Data not found\"});\n          }else{\n            var dt = [];\n\n            dt.push({\n              \"conversationId\": data[0].ConversationID\n            });\n\n            return res.status(200).json({statusCode:200,success:true,data:dt[0]});\n          }\n      });\n    });\n  }\n\n  \n\n}\nmodule.exports = new cChat();\n"]}