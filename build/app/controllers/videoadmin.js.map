{"version":3,"sources":["../src/app/controllers/videoadmin.js"],"names":["connection","require","jwt","bcrypt","userModel","empty","cVideoAdmin","list","req","res","next","page","query","undefined","limit","type","offset","count","search","acquire","err","con","sql","data","release","status","json","statusCode","message","code","dt","i","length","push","video_id","video_youtube_id","video_youtube_link","video_youtube_iframe","video_youtube_image","video_title","video_desc","video_type","video_position","post_date","success","listSlider","listAdmin","detail","videoId","params","id","post","youtubeLink","body","title","desc","youtubeId","split","youtubeIframe","youtubeImg","position","console","log","insertId","update","delete","affectedRows","module","exports"],"mappings":"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","file":"videoadmin.js","sourcesContent":["var connection = require('../../../config/db');\n\nvar jwt = require('jsonwebtoken'),\n    bcrypt = require('bcrypt'),\n    userModel = require('../models/user'),\n    empty = require('is-empty');\n \nfunction cVideoAdmin() {\n \n  this.list = function(req,res,next) {\n\n    var page = (req.query.page == undefined) ? 1 : req.query.page;\n    var limit = (req.query.limit == undefined) ? 20 : req.query.limit;\n    var type = req.query.type;\n    \n  \n    var offset = (page - 1) * limit;\n    var count = \" LIMIT \"+offset+\",\"+limit;\n\n    var search = \"\";\n\n    if(!empty(type)){\n      search += \" AND video_type = '\"+type+\"'\";\n    }\n\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var sql = \"SELECT * from videos_admin WHERE status = 1 AND video_position = 0 \"+search+\" ORDER BY video_id DESC \"+count\n        \n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n             \n\n          var dt = [];\n          for (var i = 0; i < data.length; i++) {\n              dt.push({\n                \"videoId\": data[i].video_id,\n                \"youtubeId\": data[i].video_youtube_id,\n                \"youtubeLink\": data[i].video_youtube_link,\n                \"youtubeIframe\": data[i].video_youtube_iframe,\n                \"youtubeImg\": data[i].video_youtube_image,\n                \"title\": data[i].video_title,\n                \"description\": data[i].video_desc,\n                \"type\": data[i].video_type,\n                \"position\": data[i].video_position,\n                \"postDate\": data[i].post_date\n              });\n          }\n\n          return res.status(200).json({\n                                  statusCode:200,\n                                  success:true,\n                                  data:dt\n                              });\n \n      });\n    });\n  }\n\n  this.listSlider = function(req,res,next) {\n\n    var page = (req.query.page == undefined) ? 1 : req.query.page;\n    var limit = (req.query.limit == undefined) ? 20 : req.query.limit;\n    \n  \n    var offset = (page - 1) * limit;\n    var count = \" LIMIT \"+offset+\",\"+limit;\n\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var sql = \"SELECT * from videos_admin WHERE status = 1 AND video_position <> 0 ORDER BY video_id DESC \"+count\n        \n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n             \n\n          var dt = [];\n          for (var i = 0; i < data.length; i++) {\n              dt.push({\n                \"videoId\": data[i].video_id,\n                \"youtubeId\": data[i].video_youtube_id,\n                \"youtubeLink\": data[i].video_youtube_link,\n                \"youtubeIframe\": data[i].video_youtube_iframe,\n                \"youtubeImg\": data[i].video_youtube_image,\n                \"title\": data[i].video_title,\n                \"description\": data[i].video_desc,\n                \"type\": data[i].video_type,\n                \"position\": data[i].video_position,\n                \"postDate\": data[i].post_date\n              });\n          }\n\n          return res.status(200).json({\n                                  statusCode:200,\n                                  success:true,\n                                  data:dt\n                              });\n \n      });\n    });\n  }\n\n  this.listAdmin = function(req,res,next) {\n\n    var page = (req.query.page == undefined) ? 1 : req.query.page;\n    var limit = (req.query.limit == undefined) ? 20 : req.query.limit;\n    var type = req.query.type;\n    \n  \n    var offset = (page - 1) * limit;\n    var count = \" LIMIT \"+offset+\",\"+limit;\n\n    var search = \"\";\n\n    if(!empty(type)){\n      search += \" AND video_type = '\"+type+\"'\";\n    }\n\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n        var sql = \"SELECT * from videos_admin WHERE 1 \"+search+\" ORDER BY video_id DESC \"+count\n        \n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n             \n\n          var dt = [];\n          for (var i = 0; i < data.length; i++) {\n              dt.push({\n                \"videoId\": data[i].video_id,\n                \"youtubeId\": data[i].video_youtube_id,\n                \"youtubeLink\": data[i].video_youtube_link,\n                \"youtubeIframe\": data[i].video_youtube_iframe,\n                \"youtubeImg\": data[i].video_youtube_image,\n                \"title\": data[i].video_title,\n                \"description\": data[i].video_desc,\n                \"type\": data[i].video_type,\n                \"position\": data[i].video_position,\n                \"status\": data[i].status,\n                \"postDate\": data[i].post_date\n              });\n          }\n\n          return res.status(200).json({\n                                  statusCode:200,\n                                  success:true,\n                                  data:dt\n                              });\n \n      });\n    });\n  }\n\n  this.detail = function(req,res,next) {\n\n      var videoId = req.params.id;\n    \n      connection.acquire(function(err,con){\n        if (err) throw err;\n\n          var sql = \"SELECT * from videos_admin WHERE status = 1 AND video_id = '\"+videoId+\"' LIMIT 1\";\n          \n          con.query(sql, function(err,data){\n            con.release();\n            if(err)\n                return res.status(500).json({statusCode:500,message: err.code});\n\n            if(data.length < 1){\n              res.status(404).json({statusCode:404,message: \"Data not found\"});\n            }else{\n              var dt = [];\n              dt.push({\n                \"videoId\": data[0].video_id,\n                \"youtubeId\": data[0].video_youtube_id,\n                \"youtubeLink\": data[0].video_youtube_link,\n                \"youtubeIframe\": data[0].video_youtube_iframe,\n                \"youtubeImg\": data[0].video_youtube_image,\n                \"title\": data[0].video_title,\n                \"description\": data[0].video_desc,\n                \"type\": data[0].video_type,\n                \"position\": data[0].video_position,\n                \"postDate\": data[0].post_date\n              });\n\n              return res.status(200).json({\n                                      statusCode:200,\n                                      success:true,\n                                      data:dt[0]\n                                  });\n            }\n        });\n      });\n  };\n\n  this.post = function(req,res,next) {\n\n    try {\n      var youtubeLink = req.body.youtubeLink;\n      var title = req.body.title;\n      var desc = req.body.desc;\n      var youtubeId = youtubeLink.split(\"v=\")[1];\n      var youtubeIframe = \"https://youtube.com/embed/\"+youtubeId;\n      var youtubeImg = \"https://i.ytimg.com/vi/\"+youtubeId+\"/maxresdefault.jpg\";\n      var type = req.body.type;\n      var position = (req.body.position == undefined) ? 0 : req.body.position;\n      var status = 1;\n\n      connection.acquire(function(err,con){\n        if (err) throw err;\n\n          var sql = \"INSERT INTO videos_admin (video_youtube_id, video_youtube_link, video_youtube_iframe \\\n          ,video_youtube_image,video_title,video_desc,video_type,video_position,status,post_date) \\\n          VALUES ('\"+youtubeId+\"','\"+youtubeLink+\"','\"+youtubeIframe+\"','\"+youtubeImg+\"','\"+title+\"', '\"+desc+\"','\"+type+\"','\"+position+\"', '\"+status+\"', NOW())\";\n\n          console.log(sql);\n\n          con.query(sql, function(err,data){\n            con.release();\n            if(err)\n                return res.status(500).json({statusCode:500,message: err.code});\n               \n\n            return res.status(200).json({\n                                    statusCode:200,\n                                    success:true,\n                                    data:{\"videoId\":data.insertId}\n                                });\n   \n        });\n      });\n    } catch (err){\n      return res.status(500).json({statusCode:500,message: \"Please check your parameter or value required\"});\n    }\n    \n     \n  };\n\n  this.update = function(req,res,next) {\n    try {\n      var videoId = req.body.videoId;\n      var youtubeLink = req.body.youtubeLink;\n      var title = req.body.title;\n      var desc = req.body.desc;\n      var youtubeId = youtubeLink.split(\"v=\")[1];\n      var youtubeIframe = \"https://youtube.com/embed/\"+youtubeId;\n      var youtubeImg = \"https://i.ytimg.com/vi/\"+youtubeId+\"/maxresdefault.jpg\";\n      var type = req.body.type;\n      var position = (req.body.position == undefined) ? 0 : req.body.position;\n      var status = 1;\n\n      connection.acquire(function(err,con){\n        if (err) throw err;\n\n        var sql = \"UPDATE videos_admin SET video_youtube_id = '\"+youtubeId+\"' \\\n        ,video_youtube_link = '\"+youtubeLink+\"' \\\n        ,video_youtube_iframe = '\"+youtubeIframe+\"',video_youtube_image = '\"+youtubeImg+\"', video_title = '\"+title+\"', video_desc = '\"+desc+\"' \\\n        ,video_type = '\"+type+\"',video_position = '\"+position+\"',update_date = NOW() WHERE video_id = '\"+videoId+\"'\";\n\n        con.query(sql, function(err,data){\n          con.release();\n          if(err)\n              return res.status(500).json({statusCode:500,message: err.code});\n             \n\n          return res.status(200).json({\n                                  statusCode:200,\n                                  success:true,\n                                  data:{\"videoId\":videoId}\n                              });\n   \n        });\n      });\n    } catch (err){\n      return res.status(500).json({statusCode:500,message: \"Please check your parameter or value required\"});\n    }\n    \n  };\n\n  this.delete = function(req,res,next) {\n    var videoId = req.body.videoId;\n\n    connection.acquire(function(err,con){\n      if (err) throw err;\n\n      var sql = \"UPDATE videos_admin SET status = 0 \\\n      ,update_date = NOW() WHERE video_id = '\"+videoId+\"'\";\n\n      //console.log(sql);\n\n        \n\n      con.query(sql, function(err,data){\n        con.release();\n        if(err)\n            return res.status(500).json({statusCode:500,message: err.code});\n\n        if(data.affectedRows == 0)\n          return res.status(500).json({statusCode:500,message: \"Failed to delete data. Check your parameter.\"}); \n\n        return res.status(200).json({\n                                statusCode:200,\n                                success:true\n                            });\n \n      });\n    });\n  };\n\n}\nmodule.exports = new cVideoAdmin();"]}