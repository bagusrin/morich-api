{"version":3,"sources":["../src/app/routes/user.js"],"names":["user","require","multer","storage","diskStorage","destination","req","file","cb","filename","fieldname","Date","now","upload","module","exports","configure","app","route","post","userRegister","userRegisterBackup","userJoin","userUpdate","get","userDetail","userDetailByUsername","userGetIdByEmail","userStatisticByEmail","uploadAction","userUploadPhoto","userSubmission","userSubmissionBackup","userList","activated","userAdminPost","userChangePassword"],"mappings":"AAAA,IAAIA,OAAOC,QAAQ,qBAAR,CAAX;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;;AAEA,IAAIE,UAAUD,OAAOE,WAAP,CAAmB;AAC7BC,eAAa,CAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,KAAmB;AAC9BA,OAAG,IAAH,EAAS,sBAAT;AACD,GAH4B;AAI7BC,YAAU,CAACH,GAAD,EAAMC,IAAN,EAAYC,EAAZ,KAAmB;AAC3BA,OAAG,IAAH,EAASD,KAAKG,SAAL,GAAiB,GAAjB,GAAuBC,KAAKC,GAAL,EAAhC;AACD;AAN4B,CAAnB,CAAd;;AASA,IAAIC,SAASX,OAAO,EAACC,SAASA,OAAV,EAAP,CAAb;;AAEAW,OAAOC,OAAP,GAAiB;AACfC,aAAW,UAASC,GAAT,EAAc;AACxBA,QAAIC,KAAJ,CAAU,gBAAV,EAA4BC,IAA5B,CAAiCnB,KAAKoB,YAAtC;AACCH,QAAIC,KAAJ,CAAU,sBAAV,EAAkCC,IAAlC,CAAuCnB,KAAKqB,kBAA5C;AACAJ,QAAIC,KAAJ,CAAU,YAAV,EAAwBC,IAAxB,CAA6BnB,KAAKsB,QAAlC;AACAL,QAAIC,KAAJ,CAAU,cAAV,EAA0BC,IAA1B,CAA+BnB,KAAKuB,UAApC;AACAN,QAAIC,KAAJ,CAAU,kBAAV,EAA8BM,GAA9B,CAAkCxB,KAAKyB,UAAvC;AACAR,QAAIC,KAAJ,CAAU,0BAAV,EAAsCM,GAAtC,CAA0CxB,KAAK0B,oBAA/C;AACAT,QAAIC,KAAJ,CAAU,cAAV,EAA0BM,GAA1B,CAA8BxB,KAAK2B,gBAAnC;AACAV,QAAIC,KAAJ,CAAU,iBAAV,EAA6BM,GAA7B,CAAiCxB,KAAK4B,oBAAtC;AACAX,QAAIC,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B,CAAoCnB,KAAK6B,YAAzC,EAAsD7B,KAAK8B,eAA3D;AACAb,QAAIC,KAAJ,CAAU,kBAAV,EAA8BC,IAA9B,CAAmCnB,KAAK+B,cAAxC;AACAd,QAAIC,KAAJ,CAAU,wBAAV,EAAoCC,IAApC,CAAyCnB,KAAKgC,oBAA9C;AACAf,QAAIC,KAAJ,CAAU,YAAV,EAAwBM,GAAxB,CAA4BxB,KAAKiC,QAAjC;AACAhB,QAAIC,KAAJ,CAAU,iBAAV,EAA6BC,IAA7B,CAAkCnB,KAAKkC,SAAvC;AACAjB,QAAIC,KAAJ,CAAU,kBAAV,EAA8BC,IAA9B,CAAmCnB,KAAKmC,aAAxC;AACAlB,QAAIC,KAAJ,CAAU,sBAAV,EAAkCC,IAAlC,CAAuCnB,KAAKoC,kBAA5C;AACD;AAjBc,CAAjB","file":"user.js","sourcesContent":["var user = require('../controllers/user');\nvar multer = require('multer');\n\nvar storage = multer.diskStorage({\n    destination: (req, file, cb) => {\n      cb(null, 'public/uploads/users')\n    },\n    filename: (req, file, cb) => {\n      cb(null, file.fieldname + '-' + Date.now())\n    }\n});\n\nvar upload = multer({storage: storage});\n \nmodule.exports = {\n  configure: function(app) {\n  \tapp.route('/user/register').post(user.userRegister);\n    app.route('/user/registerBackup').post(user.userRegisterBackup);\n    app.route('/user/join').post(user.userJoin);\n    app.route('/user/update').post(user.userUpdate);\n    app.route('/user/detail/:id').get(user.userDetail);\n    app.route('/user/username/:username').get(user.userDetailByUsername);\n    app.route('/user/id/get').get(user.userGetIdByEmail);\n    app.route('/user/statistic').get(user.userStatisticByEmail);\n    app.route('/user/uploadphoto').post(user.uploadAction,user.userUploadPhoto);\n    app.route('/user/submission').post(user.userSubmission);\n    app.route('/user/submissionBackup').post(user.userSubmissionBackup);\n    app.route('/user/list').get(user.userList);\n    app.route('/user/activated').post(user.activated);\n    app.route('/user/admin-post').post(user.userAdminPost);\n    app.route('/user/changepassword').post(user.userChangePassword);\n  }\n};"]}